% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune_net.R
\name{tune_net}
\alias{tune_net}
\title{Fit and validate Neural Networks models with exploration of hyper-parameters}
\usage{
tune_net(
  data,
  response,
  predictors,
  predictors_f = NULL,
  fit_formula = NULL,
  partition,
  grid = NULL,
  thr = NULL,
  metric = "TSS",
  n_cores = 1
)
}
\arguments{
\item{data}{data.frame. Database with response (0,1) and predictors values.}

\item{response}{character. Column name with species absence-presence data (0,1).}

\item{predictors}{character. Vector with the column names of quantitative predictor variables
(i.e. continuous variables). Usage predictors = c("aet", "cwd", "tmin")}

\item{predictors_f}{character. Vector with the column names of qualitative predictor variables
(i.e. ordinal or nominal variables type). Usage predictors_f = c("landform")}

\item{fit_formula}{formula. A formula object with response and predictor
variables (e.g. formula(pr_ab ~ aet + ppt_jja + pH + awc + depth + landform)).
Note that the variable names used here must be consistent with those used in
response, predictors, and predictors_f arguments. Defaul NULL.}

\item{partition}{character. Column name with training and validation partition groups.}

\item{grid}{data.frame.  A data frame object with algorithm hyper-parameters values to be
tested. It is recommended to generate this data.frame with the grid() function.}

\item{thr}{character. Threshold used to get binary suitability values (i.e. 0,1), needed for
threshold-dependent performance metrics. It is possible to use more than one threshold type.
It is necessary to provide a vector for this argument. The following threshold types are
available:
\itemize{
  \item lpt: The highest threshold at which there is no omission.
  \item equal_sens_spec: Threshold at which the sensitivity and specificity are equal.
  \item max_sens_spec: Threshold at which the sum of the sensitivity and specificity is the
  highest (aka threshold that maximizes the TSS).
  \item max_jaccard: The threshold at which the Jaccard index is the highest.
  \item max_sorensen: The threshold at which the Sorensen index is highest.
  \item max_fpb: The threshold at which FPB (F-measure on presence-background data) is highest.
  \item sensitivity: Threshold based on a specified sensitivity value.
  Usage thr = c('sensitivity', sens='0.6') or thr = c('sensitivity'). 'sens' refers to
  sensitivity value. If it is not specified a sensitivity values, function will use by default
  0.9.
  }
If using more than one threshold type concatenate them, e.g., thr=c('lpt', 'max_sens_spec',
'max_jaccard'), or thr=c('lpt', 'max_sens_spec', 'sensitivity', sens='0.8'), or thr=c('lpt',
'max_sens_spec', 'sensitivity'). Function will use all thresholds if no threshold is specified.}

\item{metric}{character. Performance metric used for selecting the best combination of
hyper-parameter values. One of the following metrics can be used: SORENSEN, JACCARD, FPB, TSS,
KAPPA, AUC, and BOYCE. TSS is used as default.}

\item{n_cores}{numeric. Number of cores use for parallelization. Default 1}
}
\value{
A list object with:
\itemize{
\item model: A "nnet" class object from nnet package. This object can be used for predicting.
\item predictors: A tibble with quantitative (c column names) and qualitative (f column names)
variables use for modeling.
\item performance: Hyper-parameters values and performance metric (see \code{\link{sdm_eval}})
for the best hyper-parameters combination.
\item performance_part: Performance metric for each replica and partition (see \code{\link{sdm_eval}}).
\item hyper_performance: Performance metric (see \code{\link{sdm_eval}}) for each combination of
the hyper-parameters.
\item data_ens: Predicted suitability for each test partition based on the best model. This database is used in \code{\link{fit_ensemble}}
}
}
\description{
Fit and validate Neural Networks models with exploration of hyper-parameters
}
\examples{
\dontrun{
data(abies)
abies

# Partitioning the data with the k-fold method

abies2 <- part_random(
  data = abies,
  pr_ab = "pr_ab",
  method = c(method = "kfold", folds = 5)
)

# pr_ab columns is species presence and absences (i.e. the response variable)
# from aet to landform are the predictors variables (landform is a qualitative variable)

# Hyper-parameter values for tuning
tune_grid <-
  expand.grid(
    size = c(2, 4, 6, 8, 10),
    decay = c(0.001, 0.05, 0.1, 1, 3, 4, 5, 10)
  )

net_t <-
  tune_net(
    data = abies2,
    response = "pr_ab",
    predictors = c(
      "aet", "cwd", "tmin", "ppt_djf",
      "ppt_jja", "pH", "awc", "depth"
    ),
    predictors_f = c("landform"),
    partition = ".part",
    grid = tune_grid,
    thr = "max_sens_spec",
    metric = "TSS",
    n_cores = 1
  )

# Outputs
net_t$model
net_t$predictors
net_t$performance
net_t$performance_part
net_t$hyper_performance
net_t$data_ens
}

}
\seealso{
\code{\link{tune_gbm}}, \code{\link{tune_max}}, \code{\link{tune_raf}}, and \code{\link{tune_svm}}.
}
